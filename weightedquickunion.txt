

class weightedquickunion:
     def __init__(self, sz):
        self.size = sz
        self.Id = []
        self.sz=[]
        for i in range(self.size):
            self.Id.append(i)
            self.sz.append(1)  # Append elements to the list


     def root(self,i):
         while i !=self.Id[i]:
             self.Id[i]=self.Id[self.Id[i]]
             i=self.Id[i]
         return i 



     def find(self,p,q):
         return self.root(p)==self.root(q)


     def union(self,p,q):
         i=self.root(p)
         j=self.root(q)
         if i==j:
             return
         if self.sz[i]<self.sz[j]:
            self.Id[i]=j
            self.sz[i]+=self.sz[j]
         else:
            self.Id[j]=i
            self.sz[j]+=self.sz[i]

    